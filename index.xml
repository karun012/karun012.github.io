<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Karun Ramakrishnan</title><link>https://www.karun.dev/</link><description>Recent content on Karun Ramakrishnan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 Aug 2022 19:00:00 -0700</lastBuildDate><atom:link href="https://www.karun.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>IntelliJ Live Templates With Groovy Script</title><link>https://www.karun.dev/posts/intellij-live-templates-scala/</link><pubDate>Fri, 05 Aug 2022 19:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/intellij-live-templates-scala/</guid><description>Live Templates have made my programming life a lot easier. There is a lot of boilerplate code that we type every single day. Let us see how we can leverage Groovy script to build some powerful Scala live templates.
Unfortunately the documentation for this is almost non existent. Oh well!
I ended up looking at the IntelliJ Scala plugin’s source to find the available variables for live templates. You can see it here - IntelliJ live template variables</description></item><item><title>Switch Apps on MacOS Using Keyboard Shortcuts</title><link>https://www.karun.dev/posts/switch-apps-on-macos-using-automator-and-moonlander/</link><pubDate>Thu, 07 Jul 2022 20:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/switch-apps-on-macos-using-automator-and-moonlander/</guid><description>Disclaimer Do this at your own risk. I&amp;rsquo;m not responsible if your stuff breaks. You&amp;rsquo;ll be allowing Automator to control your computer. If you have weird automations you can potentially create security holes in your computer. Again, I&amp;rsquo;m in no way responsible if you do any of that. This is just a what I did to make something work.
Let&amp;rsquo;s get to it then This morning I came across the duckyPad and almost made an impulsive buy.</description></item><item><title>Why I recommend playing with Haskell</title><link>https://www.karun.dev/posts/why-i-recommend-playing-with-haskell/</link><pubDate>Sat, 23 Apr 2022 18:00:00 +0530</pubDate><guid>https://www.karun.dev/posts/why-i-recommend-playing-with-haskell/</guid><description>I primarily program in Scala. A few years ago, I got into Haskell programming when the director of engineering at the company that I worked for told me about it and let me set up a Haskell study group. It’s a language which you probably won’t use in real life unless you work for a company that can afford to play with languages like these. Haskell gave me the first taste of FP.</description></item><item><title>What I understood from the movie - RRR</title><link>https://www.karun.dev/posts/what-i-understood-from-the-movie-rrr/</link><pubDate>Sat, 16 Apr 2022 07:00:00 +0530</pubDate><guid>https://www.karun.dev/posts/what-i-understood-from-the-movie-rrr/</guid><description>There is way more logic in any of Nityananda&amp;rsquo;s speeches than SS Rajamouli&amp;rsquo;s RRR
Karun Ramakrishnan, April 15 2022
I love watching movies way too much. There are times I watch some movies multiple times. For instance I&amp;rsquo;ve watch Rajinikanth&amp;rsquo;s Sivaji over 25 times and I still enjoy it. There are times when some movies turn out to be crap. I wanted to start explaining what I understood from such movies and to spark debates around them.</description></item><item><title>Arranged Marriages - How much money do you make?</title><link>https://www.karun.dev/posts/arranged-marriage-income/</link><pubDate>Mon, 10 Jan 2022 12:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/arranged-marriage-income/</guid><description>This is a satire. The only intention here is to make fun of this whole process. Take it with a grain of salt and don&amp;rsquo;t be offended.
In the world of arranged marriages the first fairly common question you&amp;rsquo;ll get asked is - How much money do you make? The big thing about income is - because I make X, I&amp;rsquo;m only open to speaking to someone who makes something greater than X.</description></item><item><title>Control your code</title><link>https://www.karun.dev/posts/control-your-code/</link><pubDate>Thu, 23 Dec 2021 16:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/control-your-code/</guid><description>One of the things I strive for is to have full control over things that I can actually control. Life, emotions and even the code I write for a living. There will be things in life that are out of your control, so don&amp;rsquo;t worry about those.
In the nine odd years of software engineering that I have done, I have learned to use feature toggles for code branch control. Yes, I&amp;rsquo;m talking about dynamically controlling which code gets executed in production using an incredibly simple technique.</description></item><item><title>Eight years of Scala</title><link>https://www.karun.dev/posts/eight-years-of-scala/</link><pubDate>Thu, 16 Dec 2021 19:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/eight-years-of-scala/</guid><description>It started as a love-hate relationship. Today, after almost eight years of writing Scala code, I think I&amp;rsquo;m ready to say that it&amp;rsquo;s one of the best JVM languages.
Coming from a Java background, my first taste of functional programming was in Haskell. Yup! That super scary language. It&amp;rsquo;s so concise that you barely have to write code :P. Back in the day I did some fairly hardcore Haskell programming and to this day I think everyone who wants to learn programming should learn Haskell just to understand the beauty of pure functional programming.</description></item><item><title>Audiophile - what the heck is wrong with my headphone/earphone?</title><link>https://www.karun.dev/posts/audiophile-part-1/</link><pubDate>Tue, 14 Dec 2021 19:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/audiophile-part-1/</guid><description>Having grown up with a lot of interest in music, I have always enjoyed listening to music in all kinds of genres and many different languages. A couple of years ago I was finally able to get into audiophile grade equipment. It&amp;rsquo;s a fantastic hobby especially if you enjoy music. Trust me, you can blow all your money on a pair of headphones if you choose to. Check out Sennheiser HE 1 and HIFIMAN Shangri-La.</description></item><item><title>The Moral Compass</title><link>https://www.karun.dev/posts/moral-compass/</link><pubDate>Thu, 09 Dec 2021 21:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/moral-compass/</guid><description>Oh hello. It&amp;rsquo;s weirdly cold in Los Angeles today. It&amp;rsquo;s those four days of winter that we get. Just watched a good video that someone I know sent me that talks about living life without hope and the mood changed from let me listen to Mr. Bungle to let me think about life while those lentils finish cooking.
I once heard a very good statement - I go about my life using my own compass of what is right or wrong.</description></item><item><title>Make it better when you can</title><link>https://www.karun.dev/posts/cleaner-than-before/</link><pubDate>Sat, 27 Nov 2021 12:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/cleaner-than-before/</guid><description>I personally believe in the boy scout rule for Engineers
Always leave the code better than you found it
If everyone said - the code was bad when I started working on it and there were no tests, so I am going to do my job of adding this new feature and I&amp;rsquo;ll just leave it the way it is - we will never have clean code.
Imagine working on a new version of an existing class.</description></item><item><title>Install raspotify on Ubuntu server 20.04 (64 bit)/64 bit Armhf</title><link>https://www.karun.dev/posts/raspotify-64-bit-armhf/</link><pubDate>Sun, 16 May 2021 10:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/raspotify-64-bit-armhf/</guid><description>Note: Use this at your own risk! This worked for me on Ubuntu 20.04
Until it is supported on 64 bit distros
Add armhf sudo dpkg --add-architecture armhf
sudo apt update
wget https://dtcooper.github.io/raspotify/raspotify-latest.deb
sudo dpkg -i raspotify-latest.deb
If it fails, install missing dependencies. Usually libasound2.
sudo apt install libasound2
If that breaks then apt --fix-broken install
Once more sudo dpkg -i raspotify-latest.deb</description></item><item><title>Tools of the trade - Intellij IDEA - Part 1</title><link>https://www.karun.dev/posts/tools-of-the-trade-1/</link><pubDate>Tue, 22 Sep 2020 21:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/tools-of-the-trade-1/</guid><description>This is a multipart series where I want to show you what tools I use every day and some of my favorite tricks. If you would like to know anything specific or if you know any tricks, do reach out to me.
I feel developers need to get really good at using tools. I started off using Eclipse, but eventually got over it and started using Intellij IDEA. I have been a Vim guy and have not had a chance to learn Emacs.</description></item><item><title>My nine and a half commandments</title><link>https://www.karun.dev/posts/nine-and-a-half-commandments/</link><pubDate>Sat, 01 Aug 2020 11:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/nine-and-a-half-commandments/</guid><description>In software engineering every little thing matters. These are some of the principles I really like to follow -
Write tests before writing code unless there is no logic in your code. If there is no test then there should be no code. If you write the test after you write the code, you most likely will be testing behavior and not what you intended to code Write clear, clean, and concise code that works no matter what Do not try to cure a global pandemic while writing a little feature.</description></item><item><title>Premature abstraction</title><link>https://www.karun.dev/posts/premature-abstraction/</link><pubDate>Thu, 23 Jul 2020 21:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/premature-abstraction/</guid><description>TL;DR - Stick to something like the rule of three. Premature abstraction in any system is almost always going to be problematic, expensive and frustrating. Never add abstractions because you &amp;ldquo;might&amp;rdquo; need it in the future. Add it when you &amp;ldquo;really&amp;rdquo; need it
Abstraction is a good way of hiding complexity. In your software development life, you probably have created well rounded abstractions that made your life easier. While abstractions make things cleaner and easier to work with, premature abstraction will have the opposite effect.</description></item><item><title>Lessons from TDD - Logic in unit tests</title><link>https://www.karun.dev/posts/test-the-test/</link><pubDate>Mon, 20 Jul 2020 12:28:17 -0700</pubDate><guid>https://www.karun.dev/posts/test-the-test/</guid><description>TL;DR - Try not to have logic in unit tests. The whole point of a unit test is to make sure some logic works
TDD was something new to me about 8 years ago. I worked as a test automation engineer for a large corporation during my internship. My job was to automate integration tests. When I became a full time developer and starting writing production code, I learned about TDD.</description></item><item><title>About Me</title><link>https://www.karun.dev/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.karun.dev/about/</guid><description>What I do I&amp;rsquo;m a full stack software engineer in the native advertising space with close to a decade of experience writing software. I mostly code in Scala, JavaScript/TypeScript and Java. I have worked in other languages. Haskell is one of my favorites.
I also write, play the guitar, and enjoy cooking.
How to contact me firstName followed by 012 at Gmail. Yes, they didn&amp;rsquo;t have firstName at Gmail back then.</description></item></channel></rss>