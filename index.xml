<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Karun Ramakrishnan</title><link>https://www.karun.dev/</link><description>Recent content on Karun Ramakrishnan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 16 May 2021 10:00:00 -0700</lastBuildDate><atom:link href="https://www.karun.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Install raspotify on Ubuntu server 20.04 (64 bit)/64 bit Armhf</title><link>https://www.karun.dev/posts/raspotify-64-bit-armhf/</link><pubDate>Sun, 16 May 2021 10:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/raspotify-64-bit-armhf/</guid><description>Note: Use this at your own risk! This worked for me on Ubuntu 20.04
Until it is supported on 64 bit distros
Add armhf sudo dpkg --add-architecture armhf
sudo apt update
wget https://dtcooper.github.io/raspotify/raspotify-latest.deb
sudo dpkg -i raspotify-latest.deb
If it fails, install missing dependencies. Usually libasound2.
sudo apt install libasound2
If that breaks then apt --fix-broken install
Once more sudo dpkg -i raspotify-latest.deb</description></item><item><title>Tools of the trade - Intellij IDEA - Part 1</title><link>https://www.karun.dev/posts/tools-of-the-trade-1/</link><pubDate>Tue, 22 Sep 2020 21:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/tools-of-the-trade-1/</guid><description>This is a multipart series where I want to show you what tools I use every day and some of my favorite tricks. If you would like to know anything specific or if you know any tricks, do reach out to me.
I feel developers need to get really good at using tools. I started off using Eclipse, but eventually got over it and started using Intellij IDEA. I have been a Vim guy and have not had a chance to learn Emacs.</description></item><item><title>My nine and a half commandments</title><link>https://www.karun.dev/posts/nine-and-a-half-commandments/</link><pubDate>Sat, 01 Aug 2020 11:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/nine-and-a-half-commandments/</guid><description>In software engineering every little thing matters. These are some of the principles I really like to follow -
Write tests before writing code unless there is no logic in your code. If there is no test then there should be no code. If you write the test after you write the code, you most likely will be testing behavior and not what you intended to code Write clear, clean, and concise code that works no matter what Do not try to cure a global pandemic while writing a little feature.</description></item><item><title>Premature abstraction</title><link>https://www.karun.dev/posts/premature-abstraction/</link><pubDate>Thu, 23 Jul 2020 21:00:00 -0700</pubDate><guid>https://www.karun.dev/posts/premature-abstraction/</guid><description>TL;DR - Stick to something like the rule of three. Premature abstraction in any system is almost always going to be problematic, expensive and frustrating. Never add abstractions because you &amp;ldquo;might&amp;rdquo; need it in the future. Add it when you &amp;ldquo;really&amp;rdquo; need it
Abstraction is a good way of hiding complexity. In your software development life, you probably have created well rounded abstractions that made your life easier. While abstractions make things cleaner and easier to work with, premature abstraction will have the opposite effect.</description></item><item><title>Lessons from TDD - Logic in unit tests</title><link>https://www.karun.dev/posts/test-the-test/</link><pubDate>Mon, 20 Jul 2020 12:28:17 -0700</pubDate><guid>https://www.karun.dev/posts/test-the-test/</guid><description>TL;DR - Try not to have logic in unit tests. The whole point of a unit test is to make sure some logic works
TDD was something new to me about 8 years ago. I worked as a test automation engineer for a large corporation during my internship. My job was to automate integration tests. When I became a full time developer and starting writing production code, I learned about TDD.</description></item><item><title>About Me</title><link>https://www.karun.dev/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.karun.dev/about/</guid><description>What I do I&amp;rsquo;m a full stack software engineer in the native advertising space with close to a decade of experience writing software. I mostly code in Scala, JavaScript/TypeScript and Java. I have worked in other languages. Haskell is one of my favorites.
I also write, play the guitar, and enjoy cooking.
How to contact me firstName followed by 012 at Gmail. Yes, they didn&amp;rsquo;t have firstName at Gmail back then.</description></item></channel></rss>